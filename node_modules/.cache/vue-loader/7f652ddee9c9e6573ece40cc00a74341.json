{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue_zt\\src\\views\\pictures\\index.vue?vue&type=style&index=1&lang=less&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\src\\views\\pictures\\index.vue","mtime":1607754060113},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\css-loader\\dist\\cjs.js","mtime":1602332871931},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1602332873317},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\postcss-loader\\src\\index.js","mtime":1602332872304},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\less-loader\\dist\\cjs.js","mtime":1602332955985},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602332858735},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\vue-loader\\lib\\index.js","mtime":1602332873317}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQovLyAucGljdHVyZXMgLmVsLXBhZ2VyIGxpLmFjdGl2ZSB7DQovLyAgIGJhY2tncm91bmQtY29sb3I6IHJlZDsNCi8vICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KLy8gICBjb2xvcjogI2ZmZjsNCi8vIH0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/pictures","sourcesContent":["<template>\r\n  <div class=\"pictures\">\r\n      <el-card class=\"box-card\">\r\n        <template v-slot:header>\r\n          <my-breadcrumb>素材管理</my-breadcrumb>\r\n        </template>\r\n          <div class=\"top-box\">\r\n          <el-radio-group size=\"medium\" v-model=\"collect\" @change='changeCollect'>\r\n            <el-radio-button :label=\"false\" >全部</el-radio-button>\r\n            <el-radio-button :label=\"true\">隐藏</el-radio-button>\r\n          </el-radio-group>\r\n            <el-button type=\"success\" style=\"float: right\" size=\"medium\" @click=\"dialogVisible=true\">上传图片素材</el-button>\r\n            <el-dialog\r\n            :modal='false'\r\n              title=\"选择图片素材\"\r\n              :visible.sync=\"dialogVisible\"\r\n              width=\"30%\">\r\n              <!-- 这里的action  必须自己写地址  因为是eu发的  不能用之前设置的baseURL -->\r\n               <el-upload\r\n                class=\"avatar-uploader\"\r\n                :action='$axios.defaults.baseURL+\"/mp/v1_0/user/images\"'\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleAvatarSuccess\"\r\n                :before-upload=\"beforeAvatarUpload\"\r\n                :headers='headers'\r\n                :name=\"name\">\r\n                <el-image @load='closeImages' v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\"></el-image>\r\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n              </el-upload>\r\n            </el-dialog>\r\n        </div>\r\n          <el-row :gutter=\"10\">\r\n           <el-col  v-for=\"item in images\"  :key=\"item.id\" class='img_item'  :xs=\"12\" :sm=\"8\" :md=\"6\" :lg=\"4\" :xl=\"4\">\r\n                <el-image\r\n                  style=\"width:100% ; height:180px\"\r\n                  :src=item.url\r\n                  fit=\"cover\"\r\n                ></el-image>\r\n                <div class=\"option\">\r\n                  <span :class='{star:item.is_collected}' class=\"el-icon-star-off\" @click=\"switchCollect(item.id,item.is_collected)\"></span>\r\n                  <span class=\"el-icon-delete\" @click='delCollect(item.id)'></span>\r\n                </div>\r\n            </el-col>\r\n           </el-row>\r\n           <el-pagination\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page=\"currentPage\"\r\n              :page-size=\"per_page\"\r\n              layout=\"prev, pager, next\"\r\n              :total=\"total_count\">\r\n            </el-pagination>\r\n      </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPictures, collectPictures, delPictures } from '@/api/pictures.js'\r\nimport { getUser } from '@/utils/storage.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      per_page: 12,\r\n      images: [],\r\n      total_count: 0,\r\n      currentPage: 1,\r\n      collect: false,\r\n      dialogVisible: false,\r\n      imageUrl: '',\r\n      headers: {\r\n        Authorization: `Bearer ${getUser().token}`\r\n      },\r\n      name: 'image'\r\n    }\r\n  },\r\n  created () {\r\n    this.loadImages()\r\n  },\r\n  methods: {\r\n    async loadImages () {\r\n      try {\r\n        const res = await getPictures({\r\n          collect: this.collect,\r\n          page: this.currentPage,\r\n          per_page: this.per_page\r\n        })\r\n        console.log(res.data.data)\r\n        this.images = res.data.data.results\r\n        this.total_count = res.data.data.total_count\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    },\r\n    // 切换分页\r\n    handleCurrentChange (index) {\r\n      // console.log(index)\r\n      this.currentPage = index\r\n      // 切换完页面  得  重新渲染啊 !!!!\r\n      this.loadImages()\r\n    },\r\n    // 全部与收藏\r\n    changeCollect () {\r\n      this.currentPage = 1\r\n      this.loadImages()\r\n    },\r\n    // 图片上传前校验\r\n    beforeAvatarUpload (file) {\r\n      const isJPG = file.type === 'image/jpeg'\r\n      const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传头像图片只能是 JPG 格式!')\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!')\r\n      }\r\n      return isJPG && isLt2M\r\n    },\r\n    // 上传成功调用的函数\r\n    handleAvatarSuccess (res, file) {\r\n      console.log(res)\r\n      this.imageUrl = res.data.url\r\n      // 重新渲染\r\n      this.loadImages()\r\n    },\r\n    // 成功加载完 关闭预览框 并且清空预览图片\r\n    closeImages () {\r\n      setTimeout(() => {\r\n        this.dialogVisible = false\r\n        this.imageUrl = null\r\n      }, 2000)\r\n    },\r\n    // 点击收藏\r\n    async  switchCollect (id, collect) {\r\n      try {\r\n        // 这里收藏的状态要取反  和之前的状态不一样\r\n        const res = await collectPictures(id, !collect)\r\n        this.$message.success('操作成功')\r\n        // console.log(res)\r\n        this.loadImages()\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    },\r\n    // 删除图片\r\n    async delCollect (id) {\r\n      const res = await delPictures(id)\r\n      this.$message.success('操作成功')\r\n      // console.log(res)\r\n      this.loadImages()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-radio-group {\r\n  margin-bottom: 15px;\r\n}\r\n.img_item {\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n.option {\r\n  position: absolute;\r\n  left: 5px;\r\n  right:5px;\r\n  bottom: 5px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  text-align: center;\r\n  color: #fff;\r\n  span {\r\n    margin: 0 30px;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.avatar-uploader {\r\n    text-align: center;\r\n}\r\n.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n}\r\n.avatar-uploader /deep/ .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.el-pagination {\r\n  margin-top: 20px;\r\n}\r\n.star {\r\n  color: yellow;\r\n}\r\n.pictures /deep/ .el-pager li.active {\r\n  background-color: red;\r\n  border-radius: 2px;\r\n  color: #fff;\r\n}\r\n</style>\r\n<style lang=\"less\">\r\n// .pictures .el-pager li.active {\r\n//   background-color: red;\r\n//   border-radius: 2px;\r\n//   color: #fff;\r\n// }\r\n</style>\r\n"]}]}