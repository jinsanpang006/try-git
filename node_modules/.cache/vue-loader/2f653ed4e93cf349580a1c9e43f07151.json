{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue_zt\\src\\views\\fans\\index.vue?vue&type=style&index=0&id=92bc7c46&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\src\\views\\fans\\index.vue","mtime":1607754060108},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\css-loader\\dist\\cjs.js","mtime":1602332871931},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1602332873317},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\postcss-loader\\src\\index.js","mtime":1602332872304},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\less-loader\\dist\\cjs.js","mtime":1602332955985},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602332858735},{"path":"C:\\Users\\Administrator\\Desktop\\vue_zt\\node_modules\\vue-loader\\lib\\index.js","mtime":1602332873317}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZmFuc19saXN0IHsNCiAgLmZhbnNfaXRlbSB7DQogICAgd2lkdGg6IDEyMHB4Ow0KICAgIGhlaWdodDogMTcwcHg7DQogICAgYm9yZGVyOiAxcHggZGFzaGVkICNkZGQ7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIHBhZGRpbmctdG9wOiAxMHB4Ow0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7DQogICAgbWFyZ2luLWJvdHRvbTogMzBweDsNCiAgICBwIHsNCiAgICAgIG1hcmdpbjogMTBweCAwOw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/fans","sourcesContent":["<template>\r\n  <div class=\"fans\">\r\n    <el-card>\r\n      <template v-slot:header>\r\n        <my-breadcrumb>粉丝管理</my-breadcrumb>\r\n      </template>\r\n\r\n      <!-- tabs组件 -->\r\n      <el-tabs v-model=\"activeName\" type=\"card\" @tab-click=\"changeTab\">\r\n        <el-tab-pane label=\"粉丝列表\" name=\"list\">\r\n          <!-- 列表 -->\r\n          <div class=\"fans_list\">\r\n            <div class=\"fans_item\" v-for=\"item in list\" :key=\"item.id.toString()\">\r\n              <el-avatar :size=\"80\" :src=\"item.photo\"></el-avatar>\r\n              <p>{{ item.name }}</p>\r\n              <el-button type=\"primary\" plain size=\"small\">+关注</el-button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 分页 -->\r\n          <el-pagination\r\n            background\r\n            layout=\"prev, pager, next\"\r\n            :page-size=\"per_page\"\r\n            :current-page=\"page\"\r\n            @current-change=\"changePage\"\r\n            :total=\"total\">\r\n          </el-pagination>\r\n        </el-tab-pane>\r\n\r\n        <el-tab-pane label=\"粉丝画像\" name=\"img\">\r\n          <div ref=\"main\" style=\"width: 600px;height:400px;\"></div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MyBreadcrumb from '@/components/my-breadcrumb.vue'\r\nimport { reqGetFans, reqGetFansStatistics } from '@/api/fans.js'\r\nimport echarts from 'echarts'\r\nexport default {\r\n  name: 'Fans',\r\n  data () {\r\n    return {\r\n      activeName: 'list',\r\n      page: 1,\r\n      per_page: 20,\r\n      total: 0,\r\n      list: [],\r\n      // 测试默认头像\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\r\n    }\r\n  },\r\n  created () {\r\n    this.getFans()\r\n  },\r\n  methods: {\r\n    // 渲染\r\n    async getFans () {\r\n      try {\r\n        const res = await reqGetFans(this.page, this.per_page)\r\n        console.log(res)\r\n        this.list = res.data.data.results\r\n        this.total = res.data.data.total_count\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    },\r\n    // 分页\r\n    changePage (index) {\r\n      console.log(index)\r\n      this.page = index\r\n      this.getFans()\r\n    },\r\n    // 点击切换tab\r\n    async changeTab (tab) {\r\n      // console.log(tab)\r\n      if (this.activeName === 'img') {\r\n        var myChart = echarts.init(this.$refs.main)\r\n\r\n        const res = await reqGetFansStatistics()\r\n        console.log(res)\r\n        const x = []\r\n        const y = []\r\n        // 对象遍历 res的age\r\n        for (const key in res.data.data.age) {\r\n          x.push(key.replace('le', '小于').replace('gt', '大于'))\r\n          y.push(res.data.data.age[key])\r\n        }\r\n        // 指定图表的配置项和数据\r\n        var option = {\r\n          title: {\r\n            text: 'ECharts 入门示例'\r\n          },\r\n          tooltip: {},\r\n          legend: {\r\n            data: ['粉丝人数']\r\n          },\r\n          xAxis: {\r\n            data: x\r\n          },\r\n          yAxis: {},\r\n          series: [{\r\n            name: '粉丝人数',\r\n            type: 'bar',\r\n            data: y\r\n          }]\r\n        }\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option)\r\n      }\r\n    }\r\n\r\n  },\r\n  components: {\r\n    MyBreadcrumb\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.fans_list {\r\n  .fans_item {\r\n    width: 120px;\r\n    height: 170px;\r\n    border: 1px dashed #ddd;\r\n    text-align: center;\r\n    padding-top: 10px;\r\n    display: inline-block;\r\n    margin-right: 30px;\r\n    margin-bottom: 30px;\r\n    p {\r\n      margin: 10px 0;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}